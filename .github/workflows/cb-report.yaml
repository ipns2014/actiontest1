name: CB-CI-REPORTS-WORKFLOW

on:
  workflow_run:
    workflows: ["CB-CI-ACTIONS-WORKFLOW"]
    types:
      - completed

jobs:
  cb-ci-reports-job:
    name: CB-CI-REPORTS-JOB
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Check Environment variable
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
          SECRETS: ${{ toJSON(secrets) }}
        run: |
          echo "workflow starting..."

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_commit.id }}

      - name: Download cb-actions-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: cb-actions.yaml
          workflow_conclusion: success
          name: cb-actions-artifact

      - name: Display structure of downloaded files
        run: ls -R

      - name: Load PR Number
        id: loadPrNumber
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var fs = require('fs');
            var pr_number = Number(fs.readFileSync('./pr_number.txt'));
            core.setOutput('pr', pr_number)

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          commit: ${{ github.event.workflow_run.head_commit.id }}
          files: unit-tests.xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v1.3.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.txt
          flags: unittests
          name: codecov-umbrella
          override_commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Create Coverage Results
        id: coverageResult
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var report = {}
            report.summary = "You can check detailed code coverage by clicking on the badge icon to access the codecov site."
            report.text_description = "[![codecov](https://codecov.io/gh/${{ github.repository }}/branch/${{ github.event.repository.default_branch }}/graph/badge.svg)](https://codecov.io/gh/${{ github.repository }})"
            core.setOutput('report', JSON.stringify(report))

      - name: Publish Coverage Results
        uses: LouisBrunner/checks-action@v1.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.event.workflow_run.head_commit.id }}
          name: Test Coverage Results
          conclusion: ${{ job.status }}
          output: |
            ${{ steps.coverageResult.outputs.report }}

      - name: PR Comment
        if: ${{ github.event.workflow_run.event == 'pull_request' }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var fs = require('fs');
            var issue_number = Number(fs.readFileSync('./pr_number.txt'));
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: 'Everything is OK. Thank you for the PR!' + context.eventName
            });

      - name: Create Commit Comment
        if: ${{ github.event.workflow_run.event == 'push' }}
        uses: peter-evans/commit-comment@v1
        with:
          body: |
            This is a multi-line test comment
            - With GitHub **Markdown** :sparkles:
            - Created by [commit-comment][1]

            [1]: https://github.com/peter-evans/commit-comment
