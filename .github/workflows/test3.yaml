name: Go

on:
  push:
    branches: [main]
  pull_request_target:
    branches: [main]

jobs:
  #report:
  #  runs-on: ubuntu-latest
  #  container: docker://dvcorg/cml-py3:latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Generate report
  #      env:
  #        repo_token: ${{ secrets.GITHUB_TOKEN }}
  #      run: |
  #        echo "## Metrics report" > report.md
  #        cml-send-comment report.md
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check Environment variable
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
          SECRETS: ${{ toJSON(secrets) }}
        run: |
          echo "workflow starting..."
          pwd
          ls

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13

      - name: Check Folder0
        run: |
          pwd
          ls

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Check Folder1
        run: |
          pwd
          ls

      - name: Checkout PR
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: dawidd6/action-checkout-pr@v1
        with:
          pr: ${{ github.event.number }}

      - name: Check Folder2
        run: |
          pwd
          ls

      - name: PR Comment
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            **Hello**
            üåè
            !
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: "github-actions[bot]" # The user.login for temporary GitHub tokens
          allow-repeats: false # This is the default

      - name: Lint
        run: |
          go get -u golang.org/x/lint/golint
          golint ./...

      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v1
        with:
          golangci_lint_flags: "--config=.github/.golangci.yml ./..."

      - name: golint
        uses: reviewdog/action-golangci-lint@v1
        with:
          golangci_lint_flags: "--disable-all -E golint"
          tool_name: golint # Change reporter name.
          level: warning # GitHub Status Check won't become failure with this level.

      - name: errcheck
        uses: reviewdog/action-golangci-lint@v1
        with:
          golangci_lint_flags: "--disable-all -E errcheck"
          tool_name: errcheck
          level: info

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...
