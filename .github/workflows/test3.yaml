name: Go

on:
  push:
    branches: [main]
  pull_request_target:
    branches: [main]

jobs:
  #report:
  #  runs-on: ubuntu-latest
  #  container: docker://dvcorg/cml-py3:latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Generate report
  #      env:
  #        repo_token: ${{ secrets.GITHUB_TOKEN }}
  #      run: |
  #        echo "## Metrics report" > report.md
  #        cml-send-comment report.md
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check Environment variable
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
          SECRETS: ${{ toJSON(secrets) }}
        run: |
          echo "workflow starting..."
          pwd
          ls

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13

      - name: Check Folder0
        run: |
          pwd
          ls

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Check Folder1
        run: |
          pwd
          ls

      - name: Checkout PR
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: dawidd6/action-checkout-pr@v1
        with:
          pr: ${{ github.event.number }}

      - name: Check Folder2
        run: |
          pwd
          ls

      - name: PR Comment
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            **Hello**
            üåè
            !
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: "github-actions[bot]" # The user.login for temporary GitHub tokens
          allow-repeats: false # This is the default

      - name: Lint
        run: |
          go get -u golang.org/x/lint/golint
          golint ./...

      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest # Optional. [latest,nightly,v.X.Y.Z]
      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog -version
          reviewdog -conf=./.github/.reviewdog.yml -reporter=github-check -runners=golint,govet

      - name: Build
        run: go build -v ./...

      - name: Test
        run: |
          go get gotest.tools/gotestsum
          gotestsum --junitfile unit-tests.xml

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: unit-tests.xml

      - name: Calc coverage
        run: go test -v -covermode=count -coverprofile=coverage.out
      - name: Convert coverage to lcov
        uses: jandelgado/gcov2lcov-action@v1.0.5
      - name: Check Folder3
        run: |
          pwd
          ls
      # - name: Coveralls
      #   uses: coverallsapp/github-action@v1.1.2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     path-to-lcov: coverage.lcov
      - name: LCov Reporter
        uses: romeovs/lcov-reporter-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: coverage.lcov

      - name: Check Action
        uses: LouisBrunner/checks-action@v1.1.1
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Test XYZ
          conclusion: ${{ job.status }}
          output: |
            {"summary":"Test was a success","text_description":"This is a text description of the annotations and images\nWith more stuff\nAnd more"}

      - name: Create commit comment
        uses: peter-evans/commit-comment@v1
        with:
          body: |
            This is a multi-line test comment
            - With GitHub **Markdown** :sparkles:
            - Created by [commit-comment][1]

            [1]: https://github.com/peter-evans/commit-comment
